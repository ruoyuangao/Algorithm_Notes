class Solution {
    public boolean search(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        
        while (start + 1 < end) {
            int mid = start + (end - start) /2;
            if (nums[start] == nums[mid] && nums[mid] == nums[end]) {
                if (nums[start] == target) {
                    return true;
                }
                start++;
                end--;
            } else if (nums[start] <= nums[mid]) {
                if (nums[start] <= target && target <= nums[mid]) {
                    end = mid;
                } else {
                    start = mid;
                }
            } else {
                if (nums[mid] <= target && target <= nums[end]) {
                    start = mid;
                } else {
                    end = mid;
                }
            } 
        }
        
        if (nums[start] == target || nums[end] == target) {
            return true;
        } else {
            return false;
        }
        
    }
}
