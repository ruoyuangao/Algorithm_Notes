/**
 * // This is MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface MountainArray {
 *     public int get(int index) {}
 *     public int length() {}
 * }
 */
 
class Solution {
    public int findInMountainArray(int target, MountainArray mountainArr) {
        
        int peak = findPeak(mountainArr);
        
        // Search Left First
        int start = 0;
        int end = peak;
        
        while (start + 1 < end) {
            int mid = start + (end - start) / 2;
            if (mountainArr.get(mid) > target) {
                end = mid;
            } else{
                start = mid;
            }
        }
        
        if (mountainArr.get(start) == target) {
            return start;
        }
        
        if (mountainArr.get(end) == target) {
            return end;
        }
        
        // Search Right
        
        start = peak;
        end = mountainArr.length() - 1;
        
        while (start + 1 < end) {
            int mid = start + (end - start) / 2;
            if (mountainArr.get(mid) < target) {
                end = mid;
            } else {
                start = mid;
            }
        }
        
        if (mountainArr.get(start) == target) {
            return start;
        }
        
        if (mountainArr.get(end) == target) {
            return end;
        }
        
        return -1;
    }
    
    private int findPeak(MountainArray mountainArr) {
        int start = 0;
        int end = mountainArr.length() - 1;
        
        while (start + 1 < end) {
            int mid = start + (end -start) / 2;
            if (mountainArr.get(mid) < mountainArr.get(mid + 1)) {
                start = mid + 1;
            } else {
                end = mid;
            }
        }
        
        if (mountainArr.get(start) > mountainArr.get(end)) {
            return start;
        } else {
            return end;
        }
    }
}
